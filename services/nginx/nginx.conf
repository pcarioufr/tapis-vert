user  nginx;
worker_processes auto;

load_module modules/ngx_http_datadog_module.so;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
  
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # LOGGING ----------------------
    log_format main '$remote_addr - $http_x_forwarded_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for" '
    '"$datadog_trace_id" "$datadog_span_id"';
  	access_log  /var/log/nginx/access.log  main;
  
    # PUBLIC SERVER - External access for users
    server {
        listen 80;
        listen [::]:80;
        server_name {{host}};

        # Block admin routes from external access
        location /admin {
            deny all;
            return 403;
        }

        location / {
            proxy_pass http://flask:8001;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /api/ {
            proxy_pass http://169.254.255.20:8001;
            proxy_read_timeout 120s;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        location /ws {
            proxy_pass http://websocket:8003;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
        }

        # Static assets - serve all static files for public access
        # (admin-specific restrictions handled by Flask app logic if needed)
        location /static/ {
            alias /data/static/;
        }
    }

    # ADMIN SERVER - Localhost access only
    server {
        listen 8002;
        server_name localhost;

        # Admin routes - proxy to unified app (same as public)
        location /admin {
            proxy_pass http://flask:8001;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $host;
        }

        # Admin static assets - serve all static files
        location /static {
            alias /data/static;
        }

        # Block all other routes on admin server
        location / {
            return 404;
        }
    }

}
