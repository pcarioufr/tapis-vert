<!-- VIEWS ------ ------ ------ ------ ------ ------ ------ -->

    <link rel="stylesheet" href="{{ url_for('static', filename='styles/room/footer-room.css') }}">


    <!-- RoomFooterEntry -->

    <template id=t-room-footer-panel>
        <div class="room-footer-panel">
            <span class="title">invite</span>
            <div class="c-qrcode"></div>
            <span class="title">masters</span>
            <div class="masters" id="footer-masters">
                <!-- Array of [ UserFooter ] -->
            </div>
            <span class="title">players</span>
            <div class="users" id="footer-players">
                <!-- Array of [ UserFooter ] -->
            </div>
            <span class="title">watchers</span>
            <div class="users" id="footer-watchers">
                <!-- Array of [ UserFooter ] -->
            </div>
            <div class="c-round" id="footer-round">
                <!-- Button for New Round -->
            </div>
        </div>
    </template>
    <script>

    class RoomFooterEntry extends FooterEntry {

        constructor() {

            super( "right-entries" )
            this.panel = build("t-room-footer-panel")
            
            let qr = new QRCode(this.footerPanel.select(".c-qrcode"))
            qr.updateLink("https://{{host}}/r/{{room.id}}")

            this.icon = "group-2-line"
            this.name = "{{room.name}}"


            this.newRound = new Button()

            this.footerPanel.select(".c-round").append(this.newRound.e)
            this.newRound.name = "new round"
            this.newRound.icon = "refresh-line"
            this.newRound.color = "green"

            this.newRound.callback = ( async _ => {

                await call('POST', '/api/v1/rooms/{{room.id}}/round')

            })

        }

    }
    </script>


    <!-- UserFooter -->
    
    <template id=t-user>
        <div class="user">
            <span class=name></span>
            <div class=status rounded></div>
        </div>
    </template>
    <script>
    class UserFooter extends Element {

        constructor(){

            super( build("t-user") )
            console.log("UserFooter created")

        }

        set name(text)      { this.select(".name").innerText = text ; }

        set status(status)  { status == "online" ? 
                                this.select(".status").setAttribute("online", "") : 
                                this.select(".status").removeAttribute("online") 
                            }

        set role(role)          {
            let parent 
            switch(role) {
                case "master":  parent = document.getElementById("footer-masters")  ; break ;
                case "player":  parent = document.getElementById("footer-players")  ; break ;
                case "watcher": parent = document.getElementById("footer-watchers") ; break ;
                default:
                    console.error(`Role "${role}" isn't supported option for user`);
                    return
            }
            console.log(`User ${this.select(".name").innerText} moved to "${role}s"`);
            parent.append(this.e)
        }


    }
    </script>



