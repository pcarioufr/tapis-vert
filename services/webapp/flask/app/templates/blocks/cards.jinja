    <!-- CARDS ------ ------ ------ ------ -->

    <link rel="stylesheet" href="{{ url_for('static', filename='styles/blocks/cards.css') }}">

    <template id=t-card>
        <div class="container"> <!-- [flipped], [peeked] -->
            <div class="card">
                <div class="face front"></div>
                <div class="face back"></div>
                <div class="corner front">
                    <span></span>
                </div>
                <div class="corner back"></div>
            </div>
        </div>
    </template>
    <script>


    class Card extends Container {

        constructor(eParent=null){
            super( build("t-card"), eParent)

            let ccard = this.e;            
            let card = this.select('.card');
            let cardb = this.select('.face.back');

            // Toggle the corner peek effect on click
            cardb.addEventListener('click', _ => {
                this.toggle('peeked');
            });

            // Flips the card on double-click
            ccard.addEventListener('dblclick', _ => {
                this.untag('peeked');  // no peek while flipping the card
                this.toggle('flipped');
            });


        }

        set name(text)      { 
                                this.select(".face.back" ).innerText = text 
                                // this.select(".back  span.name" ).innerText = text
                            }
        set value(text)     {   
                                this.select(".face.front").innerText = text
                                this.select(".corner.front span").innerText = text 
                            }

        flip(side) {    switch (side) {
                        case 'front': this.untag ("flipped") ; break ;
                        case 'back':  this.tag ("flipped") ; break ;
                        default:      this.toggle("flipped") ; 
                        }
                    }
    }
    </script>



    <template id=t-cards>
        <div class="cards"></div>
    </template>
    <script>
    class Cards extends Container {

        constructor(eParent=null){
            super( build("t-cards"), eParent)
        }

        refresh(cards) {

            this.e.querySelectorAll('*').forEach( n => n.remove() );

            this.cards = []

            let key, value, v
            for ( const [key, value] of Object.entries(cards)) {

                this.cards[value] = new Card()

                this.cards[value].name = key
                this.cards[value].value = value

                "{{user_id}}" == key ? this.cards[value].tag("peeked") : null ;
                this.cards[value].flip("back")

                this.e.append(this.cards[value].e)

            } 

        }

    }
    </script>
