    <!-- VIEWS ------ ------ ------ ------ ------ ------ ------ -->

    <link rel="stylesheet" href="{{ url_for('static', filename='styles/elements/room.css') }}">


    <!-- RoomFooterEntry -->

    <template id=t-room-footer-panel>
        <div class="room">
            <span class="name">Room {{room_id}}</span>
            <span class="round">Round {{round_id}}</span>
            <div class="users" id="footer-users">
                <!-- Array of [ UserFooter ] -->
            </div>
        </div>
    </template>
    <script>

    class RoomFooterEntry extends FooterEntry {

        constructor() {

            super( "right-entries")
            this.panel = build("t-room-footer-panel")

        }

        set name(text)  { this.select(".room .name"  ).innerText = text }
        set round(text) { this.select(".room .round" ).innerText = text }

    }
    </script>


    <!-- UserFooter -->
    
    <template id=t-user>
        <div class="user">
            <span class=name></span>
            <div class=status rounded embossed></div>
        </div>
    </template>
    <script>
    class UserFooter extends Element {

        constructor(){
            super( build("t-user"), document.getElementById("footer-users"))
        }

        set name(text)      { this.select(".name").innerText = text ; this.id = text}

        set online(bool)    { bool ? 
                                this.select(".status").setAttribute("online", "") : 
                                this.select(".status").removeAttribute("online") 
                            }

        remove()            { this.e.remove() }

    }
    </script>



    <!-- Card -->

    <template id=t-card>
        <div class="container"> <!-- [flipped], [peeked] -->
            <div class="card">
                <div class="face front"></div>
                <div class="face back"></div>
                <div class="corner front">
                    <span></span>
                </div>
                <div class="corner back"></div>
            </div>
        </div>
    </template>

    <script>

    class Card extends Element {

        constructor(){

            super( build("t-card"), document.getElementById("table"))

            let ccard = this.e;            
            let card = this.select('.card');
            let cardb = this.select('.face.back');

            // Toggle the corner peek effect on click
            cardb.addEventListener('click', _ => {
                this.toggle('peeked');
            });

            // Flips the card on double-click
            ccard.addEventListener('dblclick', _ => {
                this.untag('peeked');  // no peek while flipping the card
                this.toggle('flipped');
            });


        }

        set owner(text)      { 
                                this.select(".face.back" ).innerText = text 
                                // this.select(".back  span.name" ).innerText = text
                            }
        set value(text)     {   
                                this.select(".face.front").innerText = text
                                this.select(".corner.front span").innerText = text 
                            }

        set peeked(bool)    {   
                                this.tag("peeked") 
                            }


        flip(side) {    switch (side) {
                        case 'front': this.untag ("flipped") ; break ;
                        case 'back':  this.tag ("flipped") ; break ;
                        default:      this.toggle("flipped") ; 
                        }
                    }
    }
    </script>



    <!-- Table -->
    <template id=t-table>
        <div class="table" id="table">
            <!-- Array of [ Card ] -->
        </div>
    </template>
    <script>
    class Table extends Element {

        constructor(){
            super( build("t-table"), document.body)
        }

        empty() { this.e.querySelectorAll('*').forEach( n => n.remove() ); }

    }
    </script>