    <!-- CARDS ------ ------ ------ ------ -->

    <link rel="stylesheet" href="{{ url_for('static', filename='styles/blocks/cards.css') }}">

    <template id=t-card>
        <div class="card" rounded embossed hoverable>
            <div class="front">
                <span class=value></span>
                <span class=name></span>
            </div>
            <div class="back"> <span class=name></span></div>
        </div>
    </template>
    <script>

    class Card extends Container {

        constructor(eParent=null){
            super( build("t-card"), eParent)
        }

        set icon(icon)      { this.cSVGO.icon = icon }
        set name(text)      { 
                                this.select(".front span.name" ).innerText = text 
                                this.select(".back  span.name" ).innerText = text 
                            }
        set value(text)    {    this.select(".front span.value").innerText = text }

        flip(side) {    switch (side) {
                        case 'front': this.tag   ("front") ; this.untag ("back") ; break ;
                        case 'back':  this.untag ("front") ; this.tag   ("back") ; break ;
                        default:      this.toggle("front") ; this.toggle("back") ; 
                        }
                    }
    }
    </script>



    <template id=t-cards>
        <div class="cards"></div>
    </template>
    <script>
    class Cards extends Container {

        constructor(eParent=null){
            super( build("t-cards"), eParent)
        }

        refresh(cards) {

            this.e.querySelectorAll('*').forEach( n => n.remove() );

            this.cards = []

            let key, value, v
            for ( const [key, value] of Object.entries(cards)) {

                this.cards[value] = new Card()

                this.cards[value].name = key
                this.cards[value].value = value

                "{{user_id}}" == key ? 
                    this.cards[value].flip("front") : 
                    this.cards[value].flip("back") 

                // this.cards[value].onclick = ( _ => this.cards[value].flip("") )
                this.cards[value].onclick = function() {this.flip("")}.bind(this.cards[value]);
                // this.cards[value].onclick = ((card) => () => card.flip(""))(this.cards[value]);

                this.e.append(this.cards[value].e)

            } 

        }

    }
    </script>
